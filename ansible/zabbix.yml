---
- hosts: localhost
  tasks:
    - name: install python2-zabbix-api
      yum:
            name: python2-zabbix-api
            state: present
    - name: Source variables and password
      shell: source /trinity/local/trinity.shadow && echo $ZABBIX_ADMIN_PASSWORD
      register: ZABBIX_ADMIN_PASSWORD

    - name: Source variables and password
      shell: source /etc/trinity.sh && echo $TRIX_CTRL_IP
      register: TRIX_CTRL_IP

    - name: Source variables and password
      shell: source /etc/trinity.sh && echo $TRIX_CTRL_HOSTNAME
      register: TRIX_CTRL_HOSTNAME


    - name: Import all templates
      zabbix_conf:
          username: "Admin"
          password: "{{ ZABBIX_ADMIN_PASSWORD.stdout  }}"
          hostname: "{{ TRIX_CTRL_IP.stdout  }}"
          object:   "configuration"
          action:   "import"
          query:    {}
          params:   
               format: "xml"
               rules: 
                      hosts:
                            createMissing: "true"
                            updateExisting: "true"
                      templates: 
                            createMissing: "true"
                            updateExisting: "true"
                      applications:
                            createMissing: "true"
                            updateExisting: "true"
                      discoveryRules: 
                            createMissing: "true"
                            updateExisting: "true"
                      graphs: 
                            createMissing: "true"
                            updateExisting: "true"
                      triggers: 
                            createMissing: "true"
                            updateExisting: "true"
                      items: 
                            createMissing: "true"
                            updateExisting: "true"
                            deleteMissing: "true"
                      templateLinkage: 
                            createMissing: "true"
                            updateExisting: "true"
                            deleteMissing: "true"
                      httptests: 
                            createMissing: "true"
                            updateExisting: "true"
                            deleteMissing: "true"

               source: "{{ lookup('file', item )}}"
      with_fileglob:
          - "/usr/lib/zabbix/templates/*.xml"

    - name: Get template IDs
      zabbix_conf: 
          username: "Admin"
          password: "{{ ZABBIX_ADMIN_PASSWORD.stdout  }}"
          hostname: "{{ TRIX_CTRL_IP.stdout  }}"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV TrinityX controller" }  } }
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV Controller" }  } }
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV App DRBD" }  } }
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV App Pacemaker" }  } }
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV Slurm" }  } }
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV Luna" }  } }

          

      register: templates
    - name: Link template to TrinintyX template
      zabbix_conf: 
          username: "Admin"
          password: "{{ ZABBIX_ADMIN_PASSWORD.stdout  }}"
          hostname: "{{ TRIX_CTRL_IP.stdout  }}"
          object:   "template"
          action:   "update"
          query:    {}
          params:   
              templateid: "{{ templates.results.0.result.0.templateid }}"  
              templates:
                  - "{{ templates.results.2.result.0.templateid }}"
                  - "{{ templates.results.3.result.0.templateid }}"
                  - "{{ templates.results.4.result.0.templateid }}"
                  - "{{ templates.results.5.result.0.templateid }}"


    - name: Link TrinintyX template to Controller template
      zabbix_conf: 
          username: "Admin"
          password: "{{ ZABBIX_ADMIN_PASSWORD.stdout  }}"
          hostname: "{{ TRIX_CTRL_IP.stdout  }}"
          object:   "template"
          action:   "update"
          query:    {}
          params:   
              templateid: "{{ templates.results.1.result.0.templateid }}"  
              templates:
                  - "{{ templates.results.0.result.0.templateid }}"

    - name: Add templates to controller
      zabbix_conf:
          username: "Admin"
          password: "{{ ZABBIX_ADMIN_PASSWORD.stdout  }}"
          hostname: "{{ TRIX_CTRL_IP.stdout  }}"
          object:   "host"
          action:   "find_update"
          query:    {"host": "{{ TRIX_CTRL_HOSTNAME.stdout }}" }
          params:
              templates:
                  - {templateid:  "{{ templates.results.1.result.0.templateid }}" }    
                  - {templateid:  10102 }    
                  - {templateid:  10104 }    

    - name: Configuring mail forwarding, creating host groups and chaging default auto registration default rule
      zabbix_conf: 
          username: "Admin"
          password: "{{ ZABBIX_ADMIN_PASSWORD.stdout  }}"
          hostname: "{{ TRIX_CTRL_IP.stdout  }}"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - {object: "mediatype", action: "find_update", query: { name: "Local e-mail" } , params: { smtp_server: "127.0.0.1" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Compute" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Controller" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Login" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Storage" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Test" } }
          - object: "action"
            action: "find_update"
            query: 
                 name: "Auto registration"
            params:  
                 operations:
                     - actionid: 7
                       operationid: 13
                       operationtype: 6
                       optemplate: 
                          - operationid: 13
                            templateid:  10102
                          - operationid: 13
                            templateid:  10104
                       recovery: 0 
