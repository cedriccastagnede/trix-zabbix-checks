---
- hosts: localhost
  tasks:
    - name: install python2-zabbix-api
      yum:
            name: python2-zabbix-api
            state: present
    - name: install MySQL-python
      yum:
            name: MySQL-python.x86_64
            state: present
    - name: Get mysql password for zabbix from /etc/trinity/passwords
      set_fact:
         zabbix_sql_pwd: "{{ lookup('password',
                          '/etc/trinity/passwords/mysql/zabbix.txt
                           chars=ascii_letters,digits,hexdigits') }}"

    - name: Aquire zabbix Admin password (generate or use one from /etc/trinity/passwords)
      set_fact:
         zabbix_admin_pwd: "{{ lookup('password',
                            '/etc/trinity/passwords/zabbix/admin.txt
                             chars=ascii_letters,digits,hexdigits') }}"



    - name: Add regexp
      mysql_db:
          login_password: "{{ zabbix_sql_pwd }}"
          login_user: zabbix
          state: import
          name: zabbix
          target: regexp.sql
 
    - name: Import all templates
      zabbix_conf:
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "configuration"
          action:   "import"
          query:    {}
          params:   
               format: "xml"
               rules: 
                      hosts:
                            createMissing: true
                            updateExisting: true
                      templates: 
                            createMissing: true
                            updateExisting: true
                      applications:
                            createMissing: true
                      discoveryRules: 
                            createMissing: true
                            updateExisting: true
                      graphs: 
                            createMissing: true
                            updateExisting: true
                      triggers: 
                            createMissing: true
                            updateExisting: true
                      items: 
                            createMissing: true
                            updateExisting: true
                            deleteMissing: true
                      templateLinkage: 
                            createMissing: true
                      httptests: 
                            createMissing: true
               source: "{{ lookup('file', item )}}"
      with_fileglob:
          - "/usr/lib/zabbix/templates/01*.xml"
          - "/usr/lib/zabbix/templates/02*.xml"
          - "/usr/lib/zabbix/templates/*.xml"

    - name: Get template IDs
      zabbix_conf: 
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - {object: "template", action: "get", query: { }, params: {filter: { host: "CV Controller" }  } }
      register: templates

    - name: Add templates to controller
      zabbix_conf:
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "host"
          action:   "find_update"
          query:    {"host": "{{ TRIX_CTRL_HOSTNAME.stdout }}" }
          params:
              templates:
                  - {templateid:  "{{ templates.results.0.result.0.templateid }}" }    
                  - {templateid:  10102 }    
                  - {templateid:  10104 }    

    - name: Get controller ID
      zabbix_conf: 
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - {object: "host", action: "get", query: { }, params: {filter: { host: "{{ TRIX_CTRL_HOSTNAME.stdout }}" }  } }
      register: controller
 
   

    - name: Configuring mail forwarding, creating host groups and chaging default auto registration default rule
      zabbix_conf: 
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - {object: "mediatype", action: "find_update", query: { name: "Local e-mail" } , params: { smtp_server: "127.0.0.1" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Compute" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Controller" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Login" } }
          - {object: "hostgroup", action: "create", query: {  } , params: { name: "Storage" } }
          - object: "action"
            action: "find_update"
            query: 
                 name: "Auto registration"
            params:  
                 operations:
                     - actionid: 7
                       operationid: 13
                       operationtype: 6
                       optemplate: 
                          - operationid: 13
                            templateid:  10102
                          - operationid: 13
                            templateid:  10104
                       recovery: 0 
    - name: Get Group IDs
      zabbix_conf: 
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - {object: "hostgroup", action: "get", query: { }, params: {filter: { name: [ "Controller" ]}  } }
      register: group


    - name: Configuring mail forwarding, creating host groups and chaging default auto registration default rule
      zabbix_conf: 
          username: "Admin"
          password: "{{ zabbix_admin_pwd  }}"
          hostname: "127.0.0.1"
          object:   "{{item.object}}"
          action:   "{{item.action}}"
          query:    "{{item.query}}"
          params:   "{{item.params}}"
      with_items:
          - object: "host"
            action: "update"
            query: { } 
            params: 
                hostid: "{{ controller.results.0.result.0.hostid}}"
                groups: 
                - groupid:  "{{ group.results.0.result.0.groupid  }}"
    - name: Enable unsafe parameters in zabbix agent
      lineinfile:
           path: /etc/zabbix/zabbix_agentd.conf
           line: 'UnsafeUserParameters=1'

    - name: Restart Zabbix agent
      service: 
          name: zabbix-agent
          state: restarted

    - name: Configure Postfix
      lineinfile:
          path: /etc/postfix/main.cf
          line: 'mydomain = {{ ansible_domain }}'
    - name: Configure Postfix
      lineinfile:
          path: /etc/postfix/main.cf
          line: 'mydestination = $myhostname, $myhostname.$mydomain'




